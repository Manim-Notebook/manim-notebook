name: Testing

on:
  push:
    branches:
      - main
  # Trigger each time HEAD branch is updated in a pull request
  # see https://github.com/orgs/community/discussions/26366
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:

  test:
      # Adapted from:
      # https://code.visualstudio.com/api/working-with-extensions/continuous-integration#github-actions
      name: Integration tests

      strategy:
        matrix:
          os: [macos-latest, ubuntu-latest, windows-latest]
      runs-on: ${{ matrix.os }}

      steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x # LTS until Oct 2025
      - run: npm install
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13' # end of support: 2029-10

      - name: Install other dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            # Install OpenGL Mesa Utils
            # https://idroot.us/install-mesa-drivers-ubuntu-24-04/
            sudo add-apt-repository ppa:kisak/kisak-mesa
            sudo apt-get update
            sudo apt-get install mesa-utils -y

            # Install Pango
            sudo apt-get install libpango1.0-dev -y

            # Work around 'NoneType' object has no attribute 'glGetError'
            # https://github.com/MPI-IS/mesh/issues/23#issuecomment-607784234
            sudo apt-get install python3-opengl
          fi
        shell: bash

      - name: Test OpenGL
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            xvfb-run -a glxinfo | grep "OpenGL version"
          else
            glxinfo | grep "OpenGL version"
          fi
        shell: bash

      # The xvfb-run command starts an X virtual framebuffer (Xvfb) server,
      # which emulates a display server without requiring a physical display.
      - name: Run tests (with xvfb)
        run: xvfb-run -a npm test
        if: runner.os == 'Linux'
      - name: Run tests (without xvfb)
        run: npm test
        if: runner.os != 'Linux'
